/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _js_blocks_constructor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js/blocks-constructor */ "./src/js/blocks-constructor.js");


const chain = [];

let debugMode = false;
let chainSize = 1;
let timeout = 2000;


function chainTypeChange(e) {
  const value = e.target.value;
  chainSize = value;
}

function timeoutChange(e) {
  const value = e.target.value;
  timeout = value;
}

function debugModeChange(e) {
  const value = e.target.checked;
  debugMode = value;
  if (debugMode === true) {
    document.querySelector('.debug-info').classList.remove('no-display');
  } else {
    document.querySelector('.debug-info').classList.add('no-display');
  }
}

function updateChainDebugInfo() {
  const chainArray = `<div>${chain.map((item, index) => `<div class='chain-row' id="debug-chain-${index}"><span>${item.i} </span><span> ${item.j}</span></div>`).reverse().join('')}</div>`;
  const currentIndex = chain.length - 1;
  document.querySelector('.chain-container').innerHTML = chainArray;
  document.querySelector(`#debug-chain-${currentIndex}`).classList.add('bold');
  const prev = document.querySelector(`#debug-chain-${currentIndex - chainSize - 1}`);
  if (prev) {
    prev.classList.add('bold');
  }
}

function handleSuccess() {
    let elementToCompare = chain[chain.length - chainSize - 2];
    let currentElement= chain[chain.length - 1];
    if (elementToCompare.i === currentElement.i && elementToCompare.j === currentElement.j) {
      alert('success');
    } else {
      alert('failure');
    }
}

function startChain() {
    document.getElementById('main-menu-screen').classList.add('no-display');
    document.getElementById('game-screen').classList.remove('no-display');
    setInterval(() => {
        const prevBlock = chain[chain.length - 1];
        let oldBlockDiv = null;
        if (prevBlock) {
          oldBlockDiv = document.querySelector(`#block-${prevBlock.i}-${prevBlock.j}`);
          oldBlockDiv.classList.add('going-to-dissapear');
        }
        setTimeout(() => {
          if(oldBlockDiv) {
            oldBlockDiv.classList.remove('going-to-dissapear');
            oldBlockDiv.classList.add('invisible');
          }
          let randI = Math.floor((Math.random() * ( _js_blocks_constructor__WEBPACK_IMPORTED_MODULE_0__["nSize"] )));
          let randJ = Math.floor((Math.random() * ( _js_blocks_constructor__WEBPACK_IMPORTED_MODULE_0__["nSize"] )));
          const block = document.querySelector(`#block-${randI}-${randJ}`);
          block.classList.remove('invisible');
          chain.push({i: randI, j: randJ });
          updateChainDebugInfo();
        }, 200);
    }, timeout);
}


document.querySelector('.game-container').innerHTML = Object(_js_blocks_constructor__WEBPACK_IMPORTED_MODULE_0__["default"])();

document.querySelector('#timeoutInput').addEventListener('change', timeoutChange);
document.querySelector('#timeoutInput').value = timeout;

document.querySelector('#debugInput').addEventListener('change', debugModeChange);

document.querySelector('#chainSizeInput').addEventListener('change', chainTypeChange);
document.querySelector('#chainSizeInput').value = chainSize;

document.querySelector('.start-button').addEventListener('click', startChain);
document.querySelector('.success-button').addEventListener('click', handleSuccess);


/***/ }),

/***/ "./src/js/blocks-constructor.js":
/*!**************************************!*\
  !*** ./src/js/blocks-constructor.js ***!
  \**************************************/
/*! exports provided: nSize, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nSize", function() { return nSize; });
let innerChildConstructor = function(i, j, blockSize) {
    return `<div id="block-${i}-${j}" class='invisible' style='width:${blockSize - 6}px;background-color:red;height:${blockSize - 6}px;margin:auto'>

    </div>`;
}

let fieldBlockConstructor = function(i, j, blockSize) {
    return `<div class='block'
     style='position:absolute;width:${blockSize - 4}px;background-color:white;display:flex;white;height:${blockSize - 4}px;top:${j*(blockSize)}px;left:${i*blockSize}px'>
      ${innerChildConstructor(i, j, blockSize)}
    </div>`;
}

const nSize = 3;
const blockSize = (400/nSize);

function createBlocks() {
  let blocks = '';
  for(let i = 0; i < nSize; i++) {
    for(let j = 0; j < nSize; j++) {
      blocks += fieldBlockConstructor(i, j, blockSize);
    }
  }

  return blocks;
}

/* harmony default export */ __webpack_exports__["default"] = (createBlocks);


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9ibG9ja3MtY29uc3RydWN0b3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0RBQTBDLGdDQUFnQztBQUMxRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdFQUF3RCxrQkFBa0I7QUFDMUU7QUFDQSx5REFBaUQsY0FBYztBQUMvRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQXlDLGlDQUFpQztBQUMxRSx3SEFBZ0gsbUJBQW1CLEVBQUU7QUFDckk7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7O0FBR0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7O0FDbEY4Qjs7QUFFOUI7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZCQUE2QixxRUFBcUUsTUFBTSxVQUFVLE9BQU8saUJBQWlCLE9BQU8sbUNBQW1DO0FBQ3BMO0FBQ0E7QUFDQSx5Q0FBeUMsYUFBYTtBQUN0RCxzREFBc0QsNkJBQTZCO0FBQ25GO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELFlBQVksR0FBRyxZQUFZO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxNQUFNLEdBQUcsTUFBTTtBQUN4RTtBQUNBLHNCQUFzQixvQkFBb0I7QUFDMUM7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMOzs7QUFHQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7QUN2RkE7QUFBQTtBQUNBLDZCQUE2QixFQUFFLEdBQUcsRUFBRSxtQ0FBbUMsY0FBYyxHQUFHLHFCQUFxQixTQUFTLGNBQWMsR0FBRzs7QUFFdkk7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsOEJBQThCLFFBQVEsY0FBYyxHQUFHLHVCQUF1QixhQUFhLE1BQU0sU0FBUyxjQUFjLEdBQUcsTUFBTSxjQUFjLEdBQUcsT0FBTyxZQUFZO0FBQ3JLLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQixXQUFXO0FBQzNCLGtCQUFrQixXQUFXO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6ImluZGV4Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc3JjL2luZGV4LmpzXCIpO1xuIiwiaW1wb3J0IGNyZWF0ZUJsb2NrcywgeyBuU2l6ZSB9IGZyb20gJy4vanMvYmxvY2tzLWNvbnN0cnVjdG9yJztcblxuY29uc3QgY2hhaW4gPSBbXTtcblxubGV0IGRlYnVnTW9kZSA9IGZhbHNlO1xubGV0IGNoYWluU2l6ZSA9IDE7XG5sZXQgdGltZW91dCA9IDIwMDA7XG5cblxuZnVuY3Rpb24gY2hhaW5UeXBlQ2hhbmdlKGUpIHtcbiAgY29uc3QgdmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcbiAgY2hhaW5TaXplID0gdmFsdWU7XG59XG5cbmZ1bmN0aW9uIHRpbWVvdXRDaGFuZ2UoZSkge1xuICBjb25zdCB2YWx1ZSA9IGUudGFyZ2V0LnZhbHVlO1xuICB0aW1lb3V0ID0gdmFsdWU7XG59XG5cbmZ1bmN0aW9uIGRlYnVnTW9kZUNoYW5nZShlKSB7XG4gIGNvbnN0IHZhbHVlID0gZS50YXJnZXQuY2hlY2tlZDtcbiAgZGVidWdNb2RlID0gdmFsdWU7XG4gIGlmIChkZWJ1Z01vZGUgPT09IHRydWUpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGVidWctaW5mbycpLmNsYXNzTGlzdC5yZW1vdmUoJ25vLWRpc3BsYXknKTtcbiAgfSBlbHNlIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGVidWctaW5mbycpLmNsYXNzTGlzdC5hZGQoJ25vLWRpc3BsYXknKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB1cGRhdGVDaGFpbkRlYnVnSW5mbygpIHtcbiAgY29uc3QgY2hhaW5BcnJheSA9IGA8ZGl2PiR7Y2hhaW4ubWFwKChpdGVtLCBpbmRleCkgPT4gYDxkaXYgY2xhc3M9J2NoYWluLXJvdycgaWQ9XCJkZWJ1Zy1jaGFpbi0ke2luZGV4fVwiPjxzcGFuPiR7aXRlbS5pfSA8L3NwYW4+PHNwYW4+ICR7aXRlbS5qfTwvc3Bhbj48L2Rpdj5gKS5yZXZlcnNlKCkuam9pbignJyl9PC9kaXY+YDtcbiAgY29uc3QgY3VycmVudEluZGV4ID0gY2hhaW4ubGVuZ3RoIC0gMTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNoYWluLWNvbnRhaW5lcicpLmlubmVySFRNTCA9IGNoYWluQXJyYXk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNkZWJ1Zy1jaGFpbi0ke2N1cnJlbnRJbmRleH1gKS5jbGFzc0xpc3QuYWRkKCdib2xkJyk7XG4gIGNvbnN0IHByZXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjZGVidWctY2hhaW4tJHtjdXJyZW50SW5kZXggLSBjaGFpblNpemUgLSAxfWApO1xuICBpZiAocHJldikge1xuICAgIHByZXYuY2xhc3NMaXN0LmFkZCgnYm9sZCcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVN1Y2Nlc3MoKSB7XG4gICAgbGV0IGVsZW1lbnRUb0NvbXBhcmUgPSBjaGFpbltjaGFpbi5sZW5ndGggLSBjaGFpblNpemUgLSAyXTtcbiAgICBsZXQgY3VycmVudEVsZW1lbnQ9IGNoYWluW2NoYWluLmxlbmd0aCAtIDFdO1xuICAgIGlmIChlbGVtZW50VG9Db21wYXJlLmkgPT09IGN1cnJlbnRFbGVtZW50LmkgJiYgZWxlbWVudFRvQ29tcGFyZS5qID09PSBjdXJyZW50RWxlbWVudC5qKSB7XG4gICAgICBhbGVydCgnc3VjY2VzcycpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhbGVydCgnZmFpbHVyZScpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gc3RhcnRDaGFpbigpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbi1tZW51LXNjcmVlbicpLmNsYXNzTGlzdC5hZGQoJ25vLWRpc3BsYXknKTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ2FtZS1zY3JlZW4nKS5jbGFzc0xpc3QucmVtb3ZlKCduby1kaXNwbGF5Jyk7XG4gICAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICBjb25zdCBwcmV2QmxvY2sgPSBjaGFpbltjaGFpbi5sZW5ndGggLSAxXTtcbiAgICAgICAgbGV0IG9sZEJsb2NrRGl2ID0gbnVsbDtcbiAgICAgICAgaWYgKHByZXZCbG9jaykge1xuICAgICAgICAgIG9sZEJsb2NrRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2Jsb2NrLSR7cHJldkJsb2NrLml9LSR7cHJldkJsb2NrLmp9YCk7XG4gICAgICAgICAgb2xkQmxvY2tEaXYuY2xhc3NMaXN0LmFkZCgnZ29pbmctdG8tZGlzc2FwZWFyJyk7XG4gICAgICAgIH1cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgaWYob2xkQmxvY2tEaXYpIHtcbiAgICAgICAgICAgIG9sZEJsb2NrRGl2LmNsYXNzTGlzdC5yZW1vdmUoJ2dvaW5nLXRvLWRpc3NhcGVhcicpO1xuICAgICAgICAgICAgb2xkQmxvY2tEaXYuY2xhc3NMaXN0LmFkZCgnaW52aXNpYmxlJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGxldCByYW5kSSA9IE1hdGguZmxvb3IoKE1hdGgucmFuZG9tKCkgKiAoIG5TaXplICkpKTtcbiAgICAgICAgICBsZXQgcmFuZEogPSBNYXRoLmZsb29yKChNYXRoLnJhbmRvbSgpICogKCBuU2l6ZSApKSk7XG4gICAgICAgICAgY29uc3QgYmxvY2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjYmxvY2stJHtyYW5kSX0tJHtyYW5kSn1gKTtcbiAgICAgICAgICBibG9jay5jbGFzc0xpc3QucmVtb3ZlKCdpbnZpc2libGUnKTtcbiAgICAgICAgICBjaGFpbi5wdXNoKHtpOiByYW5kSSwgajogcmFuZEogfSk7XG4gICAgICAgICAgdXBkYXRlQ2hhaW5EZWJ1Z0luZm8oKTtcbiAgICAgICAgfSwgMjAwKTtcbiAgICB9LCB0aW1lb3V0KTtcbn1cblxuXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ2FtZS1jb250YWluZXInKS5pbm5lckhUTUwgPSBjcmVhdGVCbG9ja3MoKTtcblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RpbWVvdXRJbnB1dCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHRpbWVvdXRDaGFuZ2UpO1xuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RpbWVvdXRJbnB1dCcpLnZhbHVlID0gdGltZW91dDtcblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2RlYnVnSW5wdXQnKS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBkZWJ1Z01vZGVDaGFuZ2UpO1xuXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2hhaW5TaXplSW5wdXQnKS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFpblR5cGVDaGFuZ2UpO1xuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NoYWluU2l6ZUlucHV0JykudmFsdWUgPSBjaGFpblNpemU7XG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zdGFydC1idXR0b24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHN0YXJ0Q2hhaW4pO1xuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN1Y2Nlc3MtYnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVTdWNjZXNzKTtcbiIsImxldCBpbm5lckNoaWxkQ29uc3RydWN0b3IgPSBmdW5jdGlvbihpLCBqLCBibG9ja1NpemUpIHtcbiAgICByZXR1cm4gYDxkaXYgaWQ9XCJibG9jay0ke2l9LSR7an1cIiBjbGFzcz0naW52aXNpYmxlJyBzdHlsZT0nd2lkdGg6JHtibG9ja1NpemUgLSA2fXB4O2JhY2tncm91bmQtY29sb3I6cmVkO2hlaWdodDoke2Jsb2NrU2l6ZSAtIDZ9cHg7bWFyZ2luOmF1dG8nPlxuXG4gICAgPC9kaXY+YDtcbn1cblxubGV0IGZpZWxkQmxvY2tDb25zdHJ1Y3RvciA9IGZ1bmN0aW9uKGksIGosIGJsb2NrU2l6ZSkge1xuICAgIHJldHVybiBgPGRpdiBjbGFzcz0nYmxvY2snXG4gICAgIHN0eWxlPSdwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoke2Jsb2NrU2l6ZSAtIDR9cHg7YmFja2dyb3VuZC1jb2xvcjp3aGl0ZTtkaXNwbGF5OmZsZXg7d2hpdGU7aGVpZ2h0OiR7YmxvY2tTaXplIC0gNH1weDt0b3A6JHtqKihibG9ja1NpemUpfXB4O2xlZnQ6JHtpKmJsb2NrU2l6ZX1weCc+XG4gICAgICAke2lubmVyQ2hpbGRDb25zdHJ1Y3RvcihpLCBqLCBibG9ja1NpemUpfVxuICAgIDwvZGl2PmA7XG59XG5cbmV4cG9ydCBjb25zdCBuU2l6ZSA9IDM7XG5jb25zdCBibG9ja1NpemUgPSAoNDAwL25TaXplKTtcblxuZnVuY3Rpb24gY3JlYXRlQmxvY2tzKCkge1xuICBsZXQgYmxvY2tzID0gJyc7XG4gIGZvcihsZXQgaSA9IDA7IGkgPCBuU2l6ZTsgaSsrKSB7XG4gICAgZm9yKGxldCBqID0gMDsgaiA8IG5TaXplOyBqKyspIHtcbiAgICAgIGJsb2NrcyArPSBmaWVsZEJsb2NrQ29uc3RydWN0b3IoaSwgaiwgYmxvY2tTaXplKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYmxvY2tzO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVCbG9ja3M7XG4iXSwic291cmNlUm9vdCI6IiJ9